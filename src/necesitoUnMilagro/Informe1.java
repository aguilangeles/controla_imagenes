/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package necesitoUnMilagro;

import Entidades.Imagen;
import Entidades.TrazaDao;
import Ventana.ImagenesWorker;
import java.util.ListIterator;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MUTNPROD003
 */
public class Informe1 extends javax.swing.JInternalFrame {

  private int sizeRamdom;
  private DefaultTableModel model;
  private TrazaDao traza;
  private ListIterator iterator;
  private boolean hasNext;
  private boolean hasPrevius;
  private int contador = 1;
  private int zoom;
  private ImagenesWorker worker;
  private boolean pdf;
  private GetRutaDeImagen rutadeimagen;
  private SetChecksBox setCB;
  private Guardar save;
  private VisualizarImagen visualizarImagen;
  private Imagen imagen;

  /**
   * Creates new form Informe
   *

   */
  public Informe1() {
    initComponents();
    this.visualizarImagen = new VisualizarImagen(scrollImage);
    rutadeimagen = new GetRutaDeImagen();
  }

  public void crearInternal(TrazaDao traza, int contador, int sizeRamdom, Imagen imagen) {
   pdf = (traza.getExtension().equals(".pdf")) ? true : false;
    TablaCheckBox tablaCheckBox = new TablaCheckBox(model, jTable2, traza);
    Imagen img = imagen;
    try {
      setZoom(slider.getValue());
      this.setTitle("Imagen  " + contador + "/" + getSizeRamdom());
      ruta.setText(img.getRutaDb());
      String rutaTemp = rutadeimagen.siguienteImagen(pdf, img);
      setLabelPagina(img);
      visualizarImagen.visualizarImagen(rutaTemp, pdf, zoom);
      setCB.set(img.getId());
    } catch (Exception e) {
      //TODO
    }
  }
  public void guardarYRemover(TrazaDao traza) {
    Guardar guardar = new Guardar();
      guardar.guardar(traza, ruta.getText(), jTable2, pagina, pdf);
      dispose();


  }


  public JTable getjTable2() {
    return jTable2;
  }

  public JLabel getPagina() {
    return pagina;
  }

  public JLabel getRuta() {
    return ruta;
  }

  public int getZoom() {
    return zoom;
  }

  public void setZoom(int zoom) {
    this.zoom = zoom;
  }

  public int getSizeRamdom() {
    return sizeRamdom;
  }

  public void setSizeRamdom(int sizeRamdom) {
    this.sizeRamdom = sizeRamdom;
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    ruta = new javax.swing.JLabel();
    pagina = new javax.swing.JLabel();
    slider = new javax.swing.JSlider();
    scrollImage = new javax.swing.JScrollPane();
    jPanel2 = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    jTable2 = new javax.swing.JTable();

    setBackground(new java.awt.Color(230, 252, 238));

    jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

    slider.setValue(20);

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addComponent(ruta, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
        .addComponent(pagina, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addComponent(scrollImage)
      .addComponent(slider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
          .addComponent(pagina, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
          .addComponent(ruta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(scrollImage))
    );

    jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

    jTable2.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {

      },
      new String [] {
        "", "Nombre", "?"
      }
    ) {
      Class[] types = new Class [] {
        java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
      };

      public Class getColumnClass(int columnIndex) {
        return types [columnIndex];
      }
    });
    jScrollPane1.setViewportView(jTable2);

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(13, 13, 13)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JTable jTable2;
  private javax.swing.JLabel pagina;
  private javax.swing.JLabel ruta;
  private javax.swing.JScrollPane scrollImage;
  private javax.swing.JSlider slider;
  // End of variables declaration//GEN-END:variables

  private void setLabelPagina(Imagen img) {
    if (pdf) {
      int page = img.getPagina() + 1;
      pagina.setText("Pagina: " + page);
    } else {
      pagina.setVisible(false);
    }
  }
}
