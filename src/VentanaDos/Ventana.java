/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package VentanaDos;

import Entidades.*;
import Helpers.ButtonEditor;
import Helpers.ButtonRenderer;
import ReporteLote.Reporte;
import Ventana.Guardar;
import Ventana.ImagenesWorker;
import Ventana.Next;
import Ventana.NumeroDeArchivosRechazados;
import Ventana.Previus;
import Ventana.SetChecksBox;
import Ventana.VisualizarImagen;

import java.util.List;
import java.util.ListIterator;
import java.util.NoSuchElementException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MUTNPROD003
 */
public class Ventana extends javax.swing.JFrame {
    //private Imagen siguientes ;
    private Imagen anteriorTif ;
    private int sizeRamdom;
    private DefaultTableModel model;
    private TrazaDao traza;
    private ListIterator iterator;
    private boolean hasNext;
    private boolean hasPrevius;
    private int contador = 1;
    private boolean guardado;
    private int zoom;
    private ImagenesWorker worker;

    public Ventana(TrazaDao traza) {
        initComponents();
        this.traza = traza;
        poblarTabla();
        createFirstInternal();
        guardado = true;
    }

    private void createFirstInternal() {
        try {
            Imagen siguientes = nextImagen();
            worker = new ImagenesWorker(siguientes.getRuta_archivo(), siguientes.getParent(), siguientes.getPagina());
            worker.execute();
            anterior.setEnabled(false);
            internal.setTitle("Imagen " + contador + "/" + getSizeRamdom());
            String rutaTemporal = worker.doInBackground();
            String rutaPdf = siguientes.getRutaDb();
            siguientes.setRutaTemp(rutaTemporal);
            rutaJlabel.setText(rutaPdf);
            pagina.setText("Pagina: "+siguientes.getPagina());
            VisualizarImagen visualizarImagen = new VisualizarImagen(rutaTemporal, scrollimage, slider, getZoom());
            internal.setVisible(true);
            int id = siguientes.getId();
            new SetChecksBox(tablaCheck).setFirstBoolean(id);
            contador++;
        }
        catch (Exception ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public ListIterator getIterator() {
        return iterator;
    }

    private Imagen nextImagen() {
        Imagen tif = null;
        try {
            ListIterator it = getIterator();
            tif = (Imagen) it.next();
            hasNext = (!it.hasNext()) ? false : true;
        } catch (NoSuchElementException e) {
            System.out.println(e.getMessage());
        }
        return tif;
    }

    private Imagen previus() {
        Imagen tif = null;
        try {
            ListIterator it = getIterator();
            tif = (Imagen) it.previous();
            hasPrevius = (!it.hasPrevious()) ? false : true;
        } catch (NoSuchElementException e) {
            System.out.println(e.getMessage());
        }
        return tif;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        panelOriginal = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        internal = new javax.swing.JInternalFrame();
        jPanel2 = new javax.swing.JPanel();
        scrollimage = new javax.swing.JScrollPane();
        slider = new javax.swing.JSlider();
        rutaJlabel = new javax.swing.JLabel();
        pagina = new javax.swing.JLabel();
        panelButtCheck = new javax.swing.JPanel();
        scrollChecks = new javax.swing.JScrollPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaCheck = new javax.swing.JTable();
        terminar = new javax.swing.JButton();
        siguiente = new javax.swing.JButton();
        anterior = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelOriginal.setBackground(new java.awt.Color(204, 255, 204));

        internal.setMaximizable(true);
        internal.setTitle("Qualitys _Version_Test 20130613");
        internal.setVisible(true);

        slider.setValue(25);

        rutaJlabel.setText("RUTA");

        pagina.setText("Pagina: ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(rutaJlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pagina, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(slider, javax.swing.GroupLayout.DEFAULT_SIZE, 738, Short.MAX_VALUE)
            .addComponent(scrollimage)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rutaJlabel, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(pagina, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollimage))
        );

        panelButtCheck.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        scrollChecks.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        tablaCheck.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Nombre", "?"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tablaCheck);

        scrollChecks.setViewportView(jScrollPane4);

        javax.swing.GroupLayout panelButtCheckLayout = new javax.swing.GroupLayout(panelButtCheck);
        panelButtCheck.setLayout(panelButtCheckLayout);
        panelButtCheckLayout.setHorizontalGroup(
            panelButtCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollChecks, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
        );
        panelButtCheckLayout.setVerticalGroup(
            panelButtCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollChecks, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout internalLayout = new javax.swing.GroupLayout(internal.getContentPane());
        internal.getContentPane().setLayout(internalLayout);
        internalLayout.setHorizontalGroup(
            internalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(internalLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelButtCheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        internalLayout.setVerticalGroup(
            internalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, internalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(internalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelButtCheck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        internal.setBounds(0, 0, 1020, 500);
        jDesktopPane1.add(internal, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jScrollPane1.setViewportView(jDesktopPane1);

        terminar.setText("Terminar");
        terminar.setEnabled(false);
        terminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terminarActionPerformed(evt);
            }
        });

        siguiente.setText("Siguiente");
        siguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguienteActionPerformed(evt);
            }
        });

        anterior.setText("Anterior");
        anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelOriginalLayout = new javax.swing.GroupLayout(panelOriginal);
        panelOriginal.setLayout(panelOriginalLayout);
        panelOriginalLayout.setHorizontalGroup(
            panelOriginalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelOriginalLayout.createSequentialGroup()
                .addGap(0, 606, Short.MAX_VALUE)
                .addComponent(siguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(anterior, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(terminar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
            .addGroup(panelOriginalLayout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        panelOriginalLayout.setVerticalGroup(
            panelOriginalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelOriginalLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 501, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelOriginalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anterior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(terminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(siguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelOriginal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelOriginal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void poblarTabla() {
        model = (DefaultTableModel) tablaCheck.getModel();
        tablaCheck.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tablaCheck.getColumnModel().getColumn(0).setPreferredWidth(20);
        tablaCheck.getColumnModel().getColumn(1).setPreferredWidth(210);
        tablaCheck.getColumnModel().getColumn(2).setPreferredWidth(20);
        iterator = traza.getListaTif().listIterator();
        List<TiposConCheck> lt = traza.getListaTipos();
        for (TiposConCheck tipos : lt) {
            boolean ischeck = tipos.isCheck();
            String nombre = tipos.getNombre();
            String boton = "Boton";
            Object[] object = new Object[]{ischeck, nombre, tipos.getId()};
            tablaCheck.getColumn("?").setCellRenderer(new ButtonRenderer());
            tablaCheck.getColumn("?").setCellEditor(
                    new ButtonEditor(new JCheckBox(), lt));
            model.addRow(object);
        }
    }
    private void siguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguienteActionPerformed
        try {
            Guardar guardar = new Guardar(traza, rutaJlabel.getText().toString(), tablaCheck);
            int setSize = getSizeRamdom() + 1;
            setSizeRamdom(setSize);
            Next proximo = new Next(anterior, siguiente, getSizeRamdom(), internal, rutaJlabel, pagina, tablaCheck);
            Imagen isNext = nextImagen();
            worker = new ImagenesWorker(isNext.getRuta_archivo(), isNext.getParent(), isNext.getPagina());
            worker.execute();
            String rutaTemporal = worker.doInBackground();
            isNext.setRutaTemp(rutaTemporal);
            proximo.crearInternalFrame(contador++, isNext, isHasNext());
            setZoom(slider.getValue());
            VisualizarImagen visualizarImagen = new VisualizarImagen(isNext.getRutaTemp(), scrollimage, slider, getZoom());
            if (!isHasNext()) {
                //            anterior.setVisible(true);
                siguiente.setEnabled(false);
                terminar.setEnabled(true);
            }
        } catch (Exception ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_siguienteActionPerformed

    private void anteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorActionPerformed
        Guardar save = new Guardar(traza, rutaJlabel.getText().toString(), tablaCheck);
        int descontar = 1;
        int der = contador - descontar;
        setContador(der);
        Imagen imagenAnterior = previus();
        Previus previus = new Previus(siguiente, internal, rutaJlabel, pagina, getSizeRamdom(), tablaCheck);
        previus.setearInternalFrame(getContador(), imagenAnterior);
        VisualizarImagen visualizarImagen = new VisualizarImagen(imagenAnterior.getRutaTemp(), scrollimage, slider, getZoom());
        if (!hasPrevius) {
            anterior.setEnabled(false);
        }
    }//GEN-LAST:event_anteriorActionPerformed



    private void terminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terminarActionPerformed
        Guardar save = new Guardar(traza, rutaJlabel.getText().toString(), tablaCheck);
        final int id = traza.getId();
        NumeroDeArchivosRechazados numeroRechazo = new NumeroDeArchivosRechazados(id);
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Reporte(id).setVisible(true);
            }
        });

//        String dir = "temp";
//        File d = new File(dir);
//
//        BorrarJPG.borrarDirectorio(d);

        dispose();
    }//GEN-LAST:event_terminarActionPerformed

    public int getZoom() {
        return slider.getValue();
    }

    public void setZoom(int zoom) {
        this.zoom = zoom;
    }

    public boolean isHasNext() {
        return hasNext;
    }

    public void setContador(int contador) {
        this.contador = contador;
    }

    public boolean isGuardado() {
        return guardado;
    }

    public void setGuardado(boolean guardado) {
        this.guardado = guardado;
    }

    public int getContador() {
        return contador;
    }

    public boolean isHasPrevius() {
        return hasPrevius;
    }

    public void setHasPrevius(boolean hasPrevius) {
        this.hasPrevius = hasPrevius;
    }

    public int getSizeRamdom() {
        return traza.getListaTif().size();
    }

    public void setSizeRamdom(int sizeRamdom) {
        this.sizeRamdom = sizeRamdom;
    }

    /**
     * Creates new form Ventana
     * @return
     */


    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anterior;
    private javax.swing.JInternalFrame internal;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel pagina;
    private javax.swing.JPanel panelButtCheck;
    private javax.swing.JPanel panelOriginal;
    private javax.swing.JLabel rutaJlabel;
    private javax.swing.JScrollPane scrollChecks;
    private javax.swing.JScrollPane scrollimage;
    private javax.swing.JButton siguiente;
    private javax.swing.JSlider slider;
    private javax.swing.JTable tablaCheck;
    private javax.swing.JButton terminar;
    // End of variables declaration//GEN-END:variables
}
